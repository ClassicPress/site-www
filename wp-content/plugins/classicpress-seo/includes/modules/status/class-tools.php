<?php
/**
 * The Tools Class.
 *
 * @since      0.1.8
 * @package    Classic_SEO
 * @subpackage Classic_SEO\Status
 */

namespace Classic_SEO\Status;

use Classic_SEO\Helper;
use Classic_SEO\Traits\Hooker;

/**
 * Tools class.
 */
class Tools {
	
	use Hooker;

	/**
	 * Register tools rest api hooks.
	 */
	public function hooks() {
		foreach ( $this->get_tools() as $id => $tool ) {
			add_filter( 'cpseo/tools/' . $id, [ $this, $id ] );
		}
	}

	/**
	 * Display Tools data.
	 */
	public function display() {
		?>
		<table class='cpseo-status-table striped cpseo-tools-table widefat'>

			<tbody class='tools'>

				<?php foreach ( $this->get_tools() as $id => $tool ) : ?>
					<tr class='<?php echo sanitize_html_class( $id ); ?>'>
						<th>
							<strong class='name'><?php echo esc_html( $tool['title'] ); ?></strong>
							<p class='description'><?php echo $tool['description']; ?></p>
						</th>
						<td class='run-tool'>
							<a href='#' class='button button-large tools-action' data-action='<?php echo esc_attr( $id ); ?>' data-confirm="<?php echo isset( $tool['confirm_text'] ) ? esc_attr( $tool['confirm_text'] ) : 'false'; ?>"><?php echo esc_html( $tool['button_text'] ); ?></a>
						</td>
					</tr>
				<?php endforeach; ?>

			</tbody>

		</table>
		<?php
	}

	/**
	 * Get tools.
	 *
	 * @return array
	 */
	private function get_tools() {
		$tools = [
			'clear_transients'    => [
				'title'       => __( 'Remove Classic SEO transients', 'cpseo' ),
				'description' => __( 'If you see any issue while using Classic SEO or one of its options - clearing the Classic SEO transients fixes the problem in most cases. Deleting transients does not delete ANY Classic SEO.', 'cpseo' ),
				'button_text' => __( 'Remove transients', 'cpseo' ),
			],

			'delete_links'        => [
				'title'        => __( 'Delete Internal Links data', 'cpseo' ),
				'description'  => __( 'In some instances, the internal links data might show an inflated number or no number at all. Deleting the internal links data might fix the issue.', 'cpseo' ),
				'confirm_text' => __( 'Are you sure you want to delete Internal Links Data? This action is irreversible.', 'cpseo' ),
				'button_text'  => __( 'Delete Internal Links', 'cpseo' ),
			],

			'delete_redirections' => [
				'title'        => __( 'Delete Redirections rule', 'cpseo' ),
				'description'  => __( 'Getting a redirection loop or need a fresh start? Delete all the redirections using this tool. Note: This process is irreversible and will delete ALL your redirection rules.', 'cpseo' ),
				'confirm_text' => __( 'Are you sure you want to delete all the Redirection Rules? This action is irreversible.', 'cpseo' ),
				'button_text'  => __( 'Delete Redirections', 'cpseo' ),
			],

			'delete_log'          => [
				'title'        => __( 'Clear 404 Log', 'cpseo' ),
				'description'  => __( 'Is the 404 error log getting out of hand? Use this option to clear ALL 404 logs generated by your website in the Classic SEO 404 Monitor.', 'cpseo' ),
				'confirm_text' => __( 'Are you sure you want to delete the 404 log? This action is irreversible.', 'cpseo' ),
				'button_text'  => __( 'Clear 404 Log', 'cpseo' ),
			],
		];
		
		if ( ! empty( Helper::get_review_posts() ) ) {
			$tools['convert_review'] = [
				'title'        => __( 'Convert Review Schema into Article', 'cpseo' ),
				/* translators: 1. Google documentation link 2. Filter code */
				'description'  => sprintf( __( 'Before using this converter, please read the Knowledge Base Article from %s.', 'cpseo' ), '<a href="" target="_blank">' . __( 'here', 'cpseo' ) . '</a>' ),
				/* translators: Number of posts to update */
				'confirm_text' => sprintf( __( 'Are you sure you want to covert %s posts with review schema into new schema type? This action is irreversible.', 'cpseo' ), count( Helper::get_review_posts() ) ),
				'button_text'  => __( 'Convert', 'cpseo' ),
			];
		}

		return $tools;
	}

	/**
	 * Function to clear all the transients.
	 */
	public function clear_transients() {
		global $wpdb;

		$transients = $wpdb->get_col(
			"SELECT `option_name` AS `name`
			FROM  $wpdb->options
			WHERE `option_name` LIKE '%_transient_cpseo%'
			ORDER BY `option_name`"
		);

		if ( empty( $transients ) ) {
			return;
		}

		foreach ( $transients as $transient ) {
			delete_option( $transient );
		}

		return __( 'Classic SEO transients cleared.', 'cpseo' );
	}

	/**
	 * Function to delete the Internal Links data.
	 */
	public function delete_links() {
		global $wpdb;
		$wpdb->query( "TRUNCATE TABLE {$wpdb->prefix}cpseo_internal_links;" );
		$wpdb->query( "TRUNCATE TABLE {$wpdb->prefix}cpseo_internal_meta;" );

		return __( 'Internal Links successfully deleted.', 'cpseo' );
	}

	/**
	 * Function to delete 404 log.
	 */
	public function delete_log() {
		global $wpdb;
		$wpdb->query( "TRUNCATE TABLE {$wpdb->prefix}cpseo_404_logs;" );

		return __( '404 Log successfully deleted.', 'cpseo' );
	}

	/**
	 * Function to delete the Redirections data.
	 */
	public function delete_redirections() {
		global $wpdb;
		$wpdb->query( "TRUNCATE TABLE {$wpdb->prefix}cpseo_redirections;" );
		$wpdb->query( "TRUNCATE TABLE {$wpdb->prefix}cpseo_redirections_cache;" );

		return __( 'Redirection rules successfully deleted.', 'cpseo' );
	}
	
	/**
	 * Function to convert the Review schema type.
	 */
	public function convert_review() {
		$posts = Helper::get_review_posts();
		if ( empty( $posts ) ) {
			return __( 'No review posts found.', 'cpseo' );
		}

		$count = 0;
		foreach ( $posts as $post_id ) {
			update_post_meta( $post_id, 'cpseo_rich_snippet', $this->do_filter( 'convert_review/type', 'article', $post_id ) );
			update_post_meta( $post_id, 'cpseo_snippet_article_type', $this->do_filter( 'convert_review/article_type', 'BlogPosting', $post_id ) );
			$count++;
		}
		update_option( 'cpseo_review_posts', $posts );
		/* translators: Number of posts updated */
		return sprintf( __( '%1$s review Posts updated. You can find the list of all converted posts %2$s.', 'cpseo' ), $count, '<a href="' . esc_url( admin_url( 'edit.php?post_type=post&review_posts=1' ) ) . '" target="_blank">here</a>' );
	}
}
